FROM golang:1.22.5-alpine as base

ENV GO111MODULE="on"
ENV GOOS="linux"
ENV CGO_ENABLED=0
WORKDIR /app

RUN apk --no-cache add curl

FROM base as dev
# Install the air binary so we get live code-reloading when we save files
RUN curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
RUN  go install github.com/go-delve/delve/cmd/dlv@latest
# Run the air command in the directory where our code will live

EXPOSE 8001
EXPOSE 2345

CMD ["air"]

### Executable builder
FROM base AS builder
WORKDIR /app


# Copy everythings
COPY . .

# Download all dependencies
RUN go mod download && go mod verify

RUN go build -mod=readonly -v -o org-forms-config-manager .

# Start a new stage from scratch
FROM alpine:latest as prod
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage. Also copy config yml file
COPY --from=builder /app/main .
COPY --from=builder /app/.env.example .env

# Expose port 8080 to the outside world
EXPOSE 8000

#Command to run the executable
CMD ["./main"]